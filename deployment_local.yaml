apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  generation: 2
  labels:
    workload.user.cattle.io/workloadselector: deployment-default-postgresql
  name: postgresql
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-postgresql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-postgresql
    spec:
      containers:
      - image: hub.rinis.cloud/library/postgresql:latest
        imagePullPolicy: Always
        name: postgresql
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: vol1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /Users/ronblom/git/docker/postgresql/data
          type: ""
        name: vol1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    field.cattle.io/ipAddresses: "null"
    field.cattle.io/targetDnsRecordIds: "null"
    field.cattle.io/targetWorkloadIds: '["deployment:default:postgresql"]'
  labels:
  name: postgresql
spec:
  clusterIP: None
  ports:
  - name: default
    port: 42
    protocol: TCP
    targetPort: 42
  selector:
    workloadID_postgresql: "true"
  sessionAffinity: None
  type: ClusterIP
